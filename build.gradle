buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://repo.spongepowered.org/maven" }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow';

//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "a-0.0.6"
group = "halqq.misericordia" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "misericordia"

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    mappings = "stable_39"
    makeObfSourceJar = true // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven {
        name = "spongepowered-repo"
        url  = "https://repo.spongepowered.org/maven"
    }

    maven {
        name = "swt-repo"
        url  = "https://maven-eclipse.github.io/maven"
    }

    maven {
        name = "jitpack.io"
        url  = "https://jitpack.io"
    }

    maven { url = 'https://impactdevelopment.github.io/maven/' }

    mavenCentral()
}

dependencies {

    compile("org.spongepowered:mixin:0.7.11-SNAPSHOT") { // do NOT update this to 8.0 or above, it breaks compatibility with future client
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }

    compile 'club.minnced:java-discord-rpc:2.0.2'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'cabaletta:baritone-deobf-unoptimized-mcp-dev:1.2'
    compile 'cabaletta:baritone-api:1.2'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}//asas

shadowJar {
    dependencies {
        include(dependency('club.minnced:java-discord-rpc'))
        include(dependency('org.spongepowered:mixin'))
    }

    exclude 'dummyThing'
    exclude "LICENSE.txt"

    classifier = 'release'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.misericordia.refmap.json'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.misericordia.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'halq.misericordia.fun.mixin.MixinLoader',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'misericordia_at.cfg'
        )
    }
}

build.dependsOn(shadowJar)